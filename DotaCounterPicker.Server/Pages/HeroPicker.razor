@using Blazored.Modal
@using Blazored.Modal.Services
@using DotaCounterPicker.Server.Utils
    <div class="container text-center">
    <div class="row justify-content-start">
@for(int i =0 ; i< _heroes.Count; i++)
{
            var buttonNumber = i;
            <button @onclick="async() => await Choose(GetHeroName(_heroes[buttonNumber]))" class="col-auto hero-image">
                <img class="" src="heroes/@_heroes[i]" />
            </button>


}
        </div>
    </div>

@code {
    [CascadingParameter] BlazoredModalInstance BlazoredModal { get; set; } = default!;

    string path = $"{Directory.GetCurrentDirectory()}{@"\wwwroot\heroes"}";

    [Parameter]
    public IEnumerable<string> RestrictHeroes { get; set; } = new List<string>();

    IList<string> _heroes = new List<string>();

    protected override void OnInitialized()
    {
        Load();
    }

    public void Load()
    {
        _heroes = Directory.GetFiles(path).Select(f => Path.GetFileName(f)).Where(n => !RestrictHeroes.Contains(GetHeroName(n))).ToList();

    }

    private string GetHeroName(string path)
    {
        return path.Replace(GlobalConsts.HeroImageExtension, "");
    }

    public async Task Choose(string heroName)
    {
        await BlazoredModal.CloseAsync(ModalResult.Ok(heroName));
    }
}
